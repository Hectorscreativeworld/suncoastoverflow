// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using suncoastoverflow;

namespace sdgreacttemplate.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190629162546_Answers")]
    partial class Answers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("suncoastoverflow.Models.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnswerBody");

                    b.Property<int>("AnswerVote");

                    b.Property<int?>("QuestionID");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("AnswersTable");
                });

            modelBuilder.Entity("suncoastoverflow.Models.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Answered");

                    b.Property<string>("QuestionBody");

                    b.Property<string>("QuestionTitle");

                    b.Property<int>("QuestionVote");

                    b.HasKey("ID");

                    b.ToTable("QuestionsTable");
                });

            modelBuilder.Entity("suncoastoverflow.Models.Answer", b =>
                {
                    b.HasOne("suncoastoverflow.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID");
                });
#pragma warning restore 612, 618
        }
    }
}
